name: Test API Predict

on:
  push:
    branches: ["master", "mike-08"]
  pull_request:
    branches: ["master"]

jobs:
  test-api:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests

      - name: Create Docker network
        run: docker network create backend

      - name: Build and start API container
        run: |
          docker compose build api_predict
          docker compose up -d api_predict

      - name: Check container content
        run: |
          echo "Contenu du dossier /app:"
          docker exec api_predict ls -la /app
          echo "Contenu du dossier /app/predict:"
          docker exec api_predict ls -la /app/predict

      - name: Wait for API to be ready
        run: |
          echo "üîÑ D√©but de la v√©rification de l'API..."
          attempt=1
          timeout 120s bash -c '
            while true; do
              echo "‚è≥ Tentative $attempt de connexion √† l'API..."
              response=$(curl -s -w "\nCode HTTP: %{http_code}\nTemps total: %{time_total}s\n" localhost:8002/model_info)
              http_code=$(echo "$response" | grep "Code HTTP:" | cut -d" " -f3)
              
              if [[ "$http_code" == "200" ]]; then
                echo "‚úÖ API pr√™te ! Code de r√©ponse: 200"
                exit 0
              else
                echo "‚ùå API pas encore pr√™te. Code de r√©ponse: $http_code"
                echo "‚è∞ Attente de 1 seconde avant la prochaine tentative..."
                attempt=$((attempt+1))
                sleep 1
              fi
            done
          ' || (echo "‚ö†Ô∏è Timeout apr√®s 120 secondes - L'API n'a pas d√©marr√©" && false)

      - name: Run API tests
        run: |
          pytest tests/test_api_predict.py -v

      - name: Docker logs on failure
        if: failure()
        run: docker compose logs api_predict

      - name: Stop containers
        if: always()
        run: |
          docker compose down
          docker network rm backend
